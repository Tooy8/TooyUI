import { computed as o, openBlock as m, createElementBlock as f, normalizeClass as v, unref as c, renderSlot as S, createElementVNode as u, normalizeStyle as w, pushScopeId as I, popScopeId as V, ref as B, toDisplayString as g, useSlots as z, h as $ } from "vue";
const b = (e, a) => {
  const t = e.__vccOpts || e;
  for (const [n, l] of a)
    t[n] = l;
  return t;
}, N = ["disabled"], k = {
  name: "yButton"
}, C = /* @__PURE__ */ Object.assign(k, {
  props: {
    type: {
      type: String,
      default: "default"
    },
    disabled: Boolean,
    plain: Boolean
  },
  setup(e) {
    const a = e, t = o(() => [
      "y-button",
      `y-button-${a.type}`,
      a.disabled ? "y-button-disabled" : "",
      a.plain ? "y-button-plain" : ""
    ]);
    return (n, l) => (m(), f("button", {
      class: v(c(t)),
      disabled: e.disabled
    }, [
      S(n.$slots, "default", {}, void 0, !0)
    ], 10, N));
  }
}), r = /* @__PURE__ */ b(C, [["__scopeId", "data-v-ebdacedf"]]);
r.install = (e) => {
  e.component(r.name, r);
};
const O = (e) => (I("data-v-5de657c4"), e = e(), V(), e), j = ["value", "placeholder", "disabled", "password"], E = /* @__PURE__ */ O(() => /* @__PURE__ */ u("i", null, "x", -1)), T = [
  E
], A = {
  name: "yInput"
}, D = /* @__PURE__ */ Object.assign(A, {
  props: {
    modelValue: String | Number,
    placeholder: String,
    disabled: Boolean,
    clearable: Boolean,
    password: Boolean
  },
  emits: ["update:modelValue"],
  setup(e, { emit: a }) {
    const t = e, n = (i) => {
      a("update:modelValue", i.target.value);
    }, l = o(() => [
      "y-input",
      {
        "y-input-disabled": t.disabled,
        "y-input-password": t.password
      }
    ]), d = o(() => [
      {
        display: t.clearable && t.modelValue ? "block" : "none"
      }
    ]), h = () => {
      a("update:modelValue", "");
    };
    return (i, x) => (m(), f("div", {
      class: v(c(l))
    }, [
      u("input", {
        type: "text",
        class: "",
        value: e.modelValue,
        onInput: n,
        placeholder: e.placeholder,
        disabled: e.disabled,
        password: e.password
      }, null, 40, j),
      u("span", {
        class: "clear-icon",
        style: w(c(d)),
        onClick: h
      }, T, 4)
    ], 2));
  }
}), p = /* @__PURE__ */ b(D, [["__scopeId", "data-v-5de657c4"]]);
p.install = (e) => {
  e.component(p.name, p);
};
const F = ["cols", "rows", "value", "disabled", "readonly", "placeholder", "maxlength"], L = { class: "max-length-inline" }, U = {
  name: "yTextarea"
}, Y = /* @__PURE__ */ Object.assign(U, {
  props: {
    modelValue: String,
    rows: {
      type: Number,
      default: 4
    },
    cols: {
      type: Number,
      default: 50
    },
    resize: {
      type: Boolean,
      default: !0
    },
    disabled: Boolean,
    readonly: Boolean,
    placeholder: String,
    maxlength: Number
  },
  emits: ["update:modelValue", "focus", "blur"],
  setup(e, { emit: a }) {
    const t = e, n = B(0), l = (s) => {
      n.value = s.target.value.length, n.value > t.maxlength && (n.value = t.maxlength), a("update:modelValue", s.target.value);
    }, d = o(() => ({
      "y-textarea": !0,
      "y-textarea-disabled": t.disabled
    })), h = o(() => ({
      resize: t.resize ? "auto" : "none"
    })), i = (s) => {
      a("focus", s);
    }, x = (s) => {
      a("blur", s);
    };
    return (s, K) => (m(), f("div", {
      class: v(c(d))
    }, [
      u("textarea", {
        name: "",
        id: "",
        cols: e.cols,
        rows: e.rows,
        value: e.modelValue,
        onInput: l,
        disabled: e.disabled,
        readonly: e.readonly,
        placeholder: e.placeholder,
        onFocus: i,
        onBlur: x,
        maxlength: e.maxlength,
        style: w(c(h))
      }, null, 44, F),
      u("div", L, g(n.value) + "/" + g(e.maxlength), 1)
    ], 2));
  }
}), _ = /* @__PURE__ */ b(Y, [["__scopeId", "data-v-731fd0c3"]]);
_.install = (e) => {
  e.component(_.name, _);
};
const q = {
  name: "ySpace",
  props: {
    inline: {
      type: Boolean,
      default: !1
    },
    size: {
      type: Array,
      default: [10, 10]
    }
  },
  setup(e) {
    const a = z(), t = B([]), n = o(() => ({
      display: e.inline ? "inline-flex" : "flex",
      gap: e.inline ? `${e.size[0]}px ${e.size[1]}px` : `${e.size[0]}px`,
      "flex-direction": e.inline ? "inherit" : "column",
      "algin-items": "center",
      "flex-wrap": "wrap",
      width: "fit-content"
    }));
    return a.default().forEach((l, d) => {
      t.value.push(
        $(
          "div",
          {
            className: "y-space-item",
            style: "width:fit-content"
          },
          l
        )
      );
    }), () => [
      $(
        "div",
        {
          className: "t-space",
          style: n.value
        },
        t.value
      )
    ];
  }
}, G = { class: "y-space" };
function H(e, a, t, n, l, d) {
  return m(), f("div", G, [
    S(e.$slots, "default", {}, void 0, !0)
  ]);
}
const y = /* @__PURE__ */ b(q, [["render", H], ["__scopeId", "data-v-ae72870d"]]);
y.install = (e) => {
  e.component(y.name, y);
};
const J = (e) => {
  e.use(p).use(r).use(_).use(y);
}, P = {
  install: J
};
export {
  P as default,
  r as yButton,
  p as yInput,
  y as ySpace,
  _ as yTextarea
};
